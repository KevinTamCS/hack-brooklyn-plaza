####################
# General Configuration
####################

# The port for the application to run on.
PORT=80

# Whether or not priority applications are active.
PRIORITY_APPLICATIONS_ACTIVE=false

# The fully qualified domains for the frontend and backend.
FRONTEND_DOMAIN=https://example.com
BACKEND_DOMAIN=https://api.example.com

# How long the generated user activation/password reset links are valid for, in milliseconds.
USER_ACTIVATION_KEY_EXPIRATION_TIME_MS=3600000
USER_PASSWORD_RESET_KEY_EXPIRATION_TIME_MS=3600000

# The Discord webhook for broadcasting announcements to.
DISCORD_WEBHOOK=https://discord.com/api/webhooks

# The URLs to the hackathon's Discord invitation, Devpost page, and event guidebook.
DISCORD_URL=https://discord.com/invite
DEVPOST_URL=https://devpost.com
GUIDE_URL=https://example.com

# The API key and settings for the Mailchimp integration.
MAILCHIMP_API_KEY=
MAILCHIMP_SERVER=
MAILCHIMP_LIST_ID=

# The API key and settings for the SendGrid integration.
SENDGRID_API_KEY=
SENDGRID_FROM_EMAIL=email@example.com
SENDGRID_ACTIVATE_ACCOUNT_TEMPLATE_ID=
SENDGRID_RESET_PASSWORD_TEMPLATE_ID=

####################
# Application Security
####################

# The number of salt rounds for bcrypt to use for salting user passwords.
BCRYPT_SALT_ROUNDS=10

# The secret used for signing JWTs.
JWT_SECRET=

# The name of the JWT refresh token cookie to be sent to the frontend.
JWT_COOKIE_NAME=refresh_token

# How long the issued JWTs are active for, in milliseconds. The access token is issued on every user session. This token
# should be valid for a short duration and will automatically be refreshed as the user uses the application. The refresh
# token is issued when a user logs in and is persisted in the browser's cookies as an HttpOnly cookie.
JWT_ACCESS_TOKEN_EXPIRATION_TIME_MS=900000
JWT_REFRESH_TOKEN_EXPIRATION_TIME_MS=2629800000

# The public and private keys to be used for authenticating push notifications. The VAPID_PUBLIC_KEY here should be the
# same as the REACT_APP_VAPID_PUBLIC_KEY on the frontend. See https://developers.google.com/web/fundamentals/push-notifications
# for more information about how push notifications work and how to generate the necessary VAPID keys.
VAPID_PUBLIC_KEY=
VAPID_PRIVATE_KEY=

####################
# AWS settings
####################

# The hyphen-separated AWS region to use. Refer to https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/region-selection.html
# for details about selecting a region.
AWS_REGION=us-east-1

# The access keys for authenticating with AWS.
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# The AWS S3 bucket to use for storing user uploaded resumes.
AWS_S3_BUCKET=

# The directory within the S3 bucket for storing the uploaded resumes.
AWS_S3_RESUME_DEST=resume

# How long generated signed AWS S3 links should last for, in milliseconds.
AWS_SIGNED_URL_DURATION_MS=3600000

####################
# Databases
####################

# Configuration for the main Hibernate-compatible database.
# The following default settings are configured with PostgreSQL in mind.
DB_DRIVER_CLASS_NAME=org.postgresql.Driver
DB_JPA_DATABASE=postgresql
DB_PLATFORM=postgres
DB_HOST=jdbc:postgresql://postgres.example.com
DB_PORT=5432
DB_NAME=hack_brooklyn
DB_USERNAME=
DB_PASSWORD=

# Configuration for the Redis data store.
# The password is required if Reids AUTH is enabled.
REDIS_LOGICAL_DATABASE=0
REDIS_HOST=redis.example.com
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_TIMEOUT=60000
REDIS_REFRESH_TOKEN_NAMESPACE=token
